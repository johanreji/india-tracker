{"version":3,"sources":["components/table.jsx","components/LinearGradient.js","components/map.jsx","App.jsx","serviceWorker.js","index.js","india-tracker-shadow.png"],"names":["lastupdatedtime","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","border","TableRow","StateTable","props","state","tableHeader","tableData","Axios","get","then","response","setState","Object","keys","data","catch","error","this","length","style","width","overflowX","Table","size","padding","aria-label","TableHead","map","v","fontWeight","TableBody","row","statecode","key","id","u","component","scope","textAlign","Skeleton","animation","height","React","Component","LinearGradient","boxStyle","margin","gradientStyle","backgroundImage","fromColor","toColor","display","min","flex","max","marginTop","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","stroke","hover","fill","transition","pressed","StyledTabs","flexGrow","indicator","Tabs","StyledTab","typography","fontWeightRegular","pxToRem","opacity","selected","Tab","disableRipple","ColorLuminance","hex","lum","String","replace","c","i","rgb","parseInt","substr","Math","round","toString","MapComponent","onMouseEnter","geo","current","tooltipContent","properties","st_nm","undefined","includes","categories","selectedIndex","onMouseLeave","handleCategoryChange","event","newValue","colorArray","push","gradientData","reduce","item","colorScale","scaleQuantile","domain","d","range","totalData","resp","filter","className","value","onChange","scrollButtons","variant","label","icon","index","projectionConfig","projection","viewBox","data-tip","geography","geographies","find","s","rsmKey","MyAppBar","styled","AppBar","background","boxShadow","HideOnScroll","children","window","trigger","useScrollTrigger","target","Slide","appear","direction","in","App","Fragment","Toolbar","Typography","marginLeft","maxWidth","src","logo","Container","Grid","container","spacing","xs","sm","lg","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.71865287.chunk.js","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Card';\nimport './table.css';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nlet lastupdatedtime;\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: '#636363',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: 'white',\n        border:'none',\n      },\n      '&:nth-of-type(even)': {\n        backgroundColor: 'white',\n        border:'none',\n      },\n    },\n  }))(TableRow);\nclass StateTable extends React.Component{\n    constructor(props) {\n        super(props);\n    this.state={\n      tableHeader : [],\n      tableData : [],\n      lastupdatedtime:0\n    }\n  }\n \n  componentDidMount(){\n    Axios.get('https://script.google.com/macros/s/AKfycbxSoELl1el6cJHtsdNcldXYgh4Tn69ofoVyNSfKGj9n2ar5YV4/exec').then(response=>{\n      this.setState({\n        tableHeader : Object.keys(response.data[0]),\n        tableData: response.data\n      })\n\n      \n    }).catch(error=>{\n      //we can update state to an error to show meaningful message on screen\n   });\n  }\n  render(){\n \n  return (this.state.tableHeader.length > 0 && this.state.tableData.length > 0) ?<Paper style={{\n        width: '100%',\n        overflowX: 'auto',\n      }}>\n      <Table  size=\"small\" padding='checkbox' aria-label=\"a dense table\">\n        {lastupdatedtime && <caption>Last updated : {lastupdatedtime}</caption>}\n        <TableHead > \n          <TableRow>\n            {this.state.tableHeader.map(v => (v!= 'statecode' && v != 'lastupdatedtime') && v && <StyledTableCell  style={{fontWeight:\"600\"}}>{v}</StyledTableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.state.tableData.map((row) => \n            row.statecode != 'TT' && <StyledTableRow key={row.id}>\n              {Object.keys(row).map(u => {\n                  if('lastupdatedtime' == u ){\n                    lastupdatedtime = row[u];\n                  }\n                  return ('statecode' != u && 'lastupdatedtime' != u && u) && <TableCell component=\"th\" scope=\"row\" style={'state' == u?{}:{textAlign:'right'}}>\n                {row[u]}\n              </TableCell>\n            })}\n            </StyledTableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Paper>:\n<Skeleton animation=\"wave\"  height='100%'/>\n  }\n}\n\nexport default StateTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LinearGradient = props => {\n  const { data } = props;\n  const boxStyle = {\n    width: '50%',\n    margin: '10px auto'\n  };\n  const gradientStyle = {\n    backgroundImage: `linear-gradient(to right, ${data.fromColor} , ${data.toColor})`,\n    height: 20\n  };\n  return (\n    <div>\n      <div style={{...boxStyle, display:\"flex\"}}>\n        <span>{data.min}</span>\n        <span style={{flex:\"1\"}}></span>\n        <span>{data.max}</span>\n      </div>\n      <div style={{ ...boxStyle, ...gradientStyle ,marginTop:\"16px\"}}></div>\n    </div>\n  );\n};\n\nLinearGradient.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default LinearGradient;","import React from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport Axios from 'axios';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport ReactTooltip from 'react-tooltip';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LinearGradient from './LinearGradient.js';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 1700,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n};\n\nlet COLOR_RANGE = [\n    '#EDFD99',\n    '#99a8fd',\n    '#fdee99',\n    '#99fdf6',\n    '#fd99ce',\n    '#b4fd99',\n  ];\n\n// function getRandomColor() {\n//     var letters = '0123456789ABCDEF';\n//     var color = '#';\n//     for (var i = 0; i < 6; i++) {\n//       color += letters[Math.floor(Math.random() * 16)];\n//     }\n//     return color;\n//   }\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-force-tab-${index}`,\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\n    };\n  }\nconst DEFAULT_COLOR = '#EEE';\n\n// const 10 = () => {\n//   return parseInt(Math.random() * 100);\n// };\n\nconst geographyStyle = {\n  default: {\n    outline: 'none',\n    stroke: '#636363'\n  },\n  hover: {\n    fill: '#ccc',\n    transition: 'all 250ms',\n    outline: 'none'\n  },\n  pressed: {\n    outline: 'none'\n  }\n};\n\n// let gradientData;\n// let colorScale;\nconst StyledTabs = withStyles({\n    root: {\n        flexGrow:1\n    },\n    indicator: {\n\n      backgroundColor: '#636363',\n\n    },\n  })((props) => <Tabs  {...props}  />);\n\n  const StyledTab = withStyles((theme) => ({\n    root: {\n\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightRegular,\n      fontSize: theme.typography.pxToRem(15),\n\n      backgroundColor:'#a2ab58 ',\n      '&$selected': {\n        color:'white',\n        opacity: 1,\n        backgroundColor:'#636363 '\n      },\n      '&:focus': {\n        color:'white',\n        opacity: 1,\n        backgroundColor:'#636363 '\n      },\n      '&:hover': {\n        color:'white',\n        opacity: 1,\n      },\n    },\n    selected: {},\n    \n  }))((props) => <Tab disableRipple {...props} />);\n\n  function ColorLuminance(hex, lum) {\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n      hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n    }\n    lum = lum || 0;\n  \n    // convert to decimal and change luminosity\n    var rgb = \"#\", c, i;\n    for (i = 0; i < 3; i++) {\n      c = parseInt(hex.substr(i*2,2), 16);\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n      rgb += (\"00\"+c).substr(c.length);\n    }\n  \n    return rgb;\n  }\n\nclass MapComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tooltipContent:'',\n            data: [],\n            gradientData:{},\n            colorScale:{},\n            selectedIndex:0\n        }\n    }\ncomponentDidMount(){\n    Axios.get('https://script.google.com/macros/s/AKfycbxSoELl1el6cJHtsdNcldXYgh4Tn69ofoVyNSfKGj9n2ar5YV4/exec').then(response=>{\n        let totalData;\n        let resp = response.data.filter(v => \n          {\n            if(v.statecode != 'TT'){       \n                return true;\n            }\n            else {\n              totalData = v;\n              return false;\n            }\n        });\n        let categories = Object.keys(resp[0]).filter(v => !['','state','statecode','lastupdatedtime'].includes(v));\n        let colorArray = [];\n        for(let i=8;i>-4;i--){\n          colorArray.push(ColorLuminance(COLOR_RANGE[0],(i+1)/10))\n        }\n        this.setState({\n          data: resp,\n          totalData:totalData,\n          categories : categories,\n          gradientData : {\n            fromColor: colorArray[0],\n            toColor: colorArray[colorArray.length -1],\n            min: 0,\n            max: resp.reduce((max, item) => (item[categories[this.state.selectedIndex]] > max ? item[categories[this.state.selectedIndex]] : max), 0)\n          },\n          colorScale : scaleQuantile()\n          .domain(resp.map(d => +d[categories[this.state.selectedIndex]]))\n          .range(colorArray)\n        })\n       \n        \n           \n        \n      }).catch(error=>{\n        //we can update state to an error to show meaningful message on screen\n     });\n}\n\n\n   onMouseEnter = (geo, current)  =>{\n    return () => {\n      this.setState({\n        tooltipContent:`${geo.properties.st_nm}: ${![\"\",null,undefined].includes(current[this.state.categories[this.state.selectedIndex]]) ? current[this.state.categories[this.state.selectedIndex]]:'NA'}`\n      })\n    };\n  };\n\n   onMouseLeave =  () => {\n    this.setState({\n        tooltipContent:`` \n      })\n  };\nhandleCategoryChange = (event, newValue)=>{\n    \n    let colorArray = [];\n    for(let i=4;i>-4;i--){\n      colorArray.push(ColorLuminance(COLOR_RANGE[newValue%COLOR_RANGE.length],(i+1)/10))\n    }\n    this.setState({\n        selectedIndex : newValue,\n        gradientData : {\n            fromColor: colorArray[0],\n            toColor: colorArray[colorArray.length-1],\n            min: 0,\n            max: this.state.data.reduce((max, item) => (item[this.state.categories[newValue]] > max ? item[this.state.categories[newValue]] : max), 0)\n          },\n          colorScale : scaleQuantile()\n          .domain(this.state.data.map(d => d[this.state.categories[newValue]]))\n          .range(colorArray)\n    })\n}\nrender(){\n  return (\n      \n   ( this.state.data.length > 0 && this.state.categories )? <div className=\"full-width-height container\">\n              <StyledTabs\n          value={this.state.selectedIndex}\n          onChange={this.handleCategoryChange}\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          aria-label=\"full width tabs example\"\n        >\n            {this.state.categories.map((v,i) => <StyledTab {...(this.state.totalData && this.state.totalData[v]?{label:this.state.totalData[v]}:{})} icon={<div>{v}</div>}  {...a11yProps(i)} />)}\n\n        </StyledTabs>\n      {/* <h1 className=\"no-margin center\">States and UTs</h1> */}\n      <ReactTooltip>{this.state.tooltipContent}</ReactTooltip>\n        <ComposableMap\n          projectionConfig={PROJECTION_CONFIG}\n          projection=\"geoMercator\"\n          \n          viewBox={  `50 -250 ${900} ${1000}` }\n          data-tip=\"\"\n        >\n          <Geographies geography={INDIA_TOPO_JSON}>\n            {({ geographies }) => geographies.map(geo => {\n                //console.log(geo.id);\n                const current = this.state.data.find(s => s.state === geo.id);\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={current ? this.state.colorScale(current[this.state.categories[this.state.selectedIndex]]) : DEFAULT_COLOR}\n                    style={geographyStyle}\n                    onMouseEnter={this.onMouseEnter(geo, current)}\n                    onMouseLeave={this.onMouseLeave}\n                  />\n                );\n              })\n            }\n          </Geographies>\n        </ComposableMap>\n       {this.state.gradientData && <LinearGradient data={this.state.gradientData} />}\n    </div>:\n<Skeleton animation=\"wave\"  height='800px'/>\n  )}\n}\n\nexport default MapComponent;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport StateTable from './components/table';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from '@material-ui/core/Paper';\nimport MapComponent from './components/map';\nimport Slide from \"@material-ui/core/Slide\";\nimport './App.css';\nimport 'axios';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport logo from './india-tracker-shadow.png';\n\n// url to a valid topojson file\nconst geoUrl =\n  \"https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\"\nconst MyAppBar = styled(AppBar)({\n  background: 'linear-gradient(45deg, #636363 30%, #a2ab58 90%)',\n  border: 0,\n  boxShadow: '0 3px 5px 2px rgba(99, 99, 99, .3)',\n  color: 'white',\n  height: 55,\n});\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\nclass App extends React.Component{\n\n  render(){\n\n    return  <React.Fragment>\n<HideOnScroll >\n  <MyAppBar >\n    <Toolbar>\n      <Typography variant=\"h4\">TRIFED</Typography>\n      <img style={{marginLeft: 'auto',maxWidth: '130px',marginTop: '-10px'}} src={logo}/>\n    </Toolbar>\n    \n  </MyAppBar>\n</HideOnScroll>\n<Toolbar />\n\n  <Container>\n  {/* <Box my={2}> */}\n  {/* <Container fixed> */}\n      <Grid container spacing={3}>\n      \n        <Grid item xs={12} sm={12} lg={6}>\n        <StateTable />\n        </Grid>\n        <Grid item xs={12} sm={12} lg={6}>\n        <MapComponent/>\n        </Grid>    \n      </Grid>\n\n\n\n  {/* </Container> */}\n  {/* </Box> */}\n</Container>\n</React.Fragment>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/india-tracker-shadow.e9889154.png\";"],"sourceRoot":""}