{"version":3,"sources":["components/table.jsx","components/LinearGradient.js","components/map.jsx","App.jsx","serviceWorker.js","index.js","india-tracker-shadow.png"],"names":["lastupdatedtime","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","border","cursor","TableRow","StateTable","props","handleStateClick","state","districtData","length","selectState","tableHeader","tableData","this","stateData","setState","Object","keys","prevProps","selectedState","filter","v","style","width","overflowX","Table","size","padding","aria-label","TableHead","map","fontWeight","TableBody","row","statecode","key","id","onClick","u","component","scope","textAlign","Skeleton","animation","height","React","Component","LinearGradient","data","boxStyle","margin","gradientStyle","backgroundImage","fromColor","toColor","display","min","flex","max","marginTop","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","stroke","hover","fill","transition","pressed","StyledTabs","flexGrow","indicator","Tabs","StyledTab","typography","fontWeightRegular","pxToRem","opacity","selected","Tab","disableRipple","ColorLuminance","hex","lum","String","replace","c","i","rgb","parseInt","substr","Math","round","toString","MapComponent","onMouseEnter","geo","current","tooltipContent","properties","st_nm","undefined","includes","categories","selectedIndex","onMouseLeave","handleCategoryChange","event","newValue","colorArray","push","gradientData","reduce","item","colorScale","scaleQuantile","domain","d","range","totalData","resp","className","value","onChange","scrollButtons","variant","label","icon","index","projectionConfig","projection","viewBox","data-tip","geography","geographies","find","s","rsmKey","MyAppBar","styled","AppBar","background","boxShadow","HideOnScroll","children","window","trigger","useScrollTrigger","target","Slide","appear","direction","in","App","Axios","get","then","response","Fragment","Toolbar","Typography","marginLeft","maxWidth","src","logo","Container","Grid","container","spacing","xs","sm","lg","alignItems","justify","minHeight","CircularProgress","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.cbcebaa0.chunk.js","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Card';\nimport './table.css';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nlet lastupdatedtime;\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: '#636363',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: 'white',\n        border:'none',\n        cursor:\"pointer\"\n      },\n      '&:nth-of-type(even)': {\n        backgroundColor: 'white',\n        border:'none',\n        cursor:\"pointer\"\n      },\n      '&:hover':{\n        backgroundColor: 'lightgrey',\n        border:'none',\n      }\n    },\n  }))(TableRow);\nclass StateTable extends React.Component{\n    constructor(props) {\n        super(props);\n    this.state={\n      tableHeader : [],\n      tableData : [],\n      lastupdatedtime:0\n    }\n  }\n \n  componentDidMount(){\n    this.props.stateData.length &&\n      this.setState({\n        tableHeader : Object.keys(this.props.stateData[0]),\n        tableData: this.props.stateData\n      })\n  }\n  componentDidUpdate(prevProps){\n    if(prevProps.selectedState !=  this.props.selectedState){\n      if(this.props.selectedState == \"\"){\n        this.setState({\n          selectedState:\"\",\n          tableHeader : Object.keys(this.props.stateData[0]),\n          tableData: this.props.stateData\n        })\n      }else{\n          this.setState({\n            selectedState:this.props.selectedState,\n            tableHeader : Object.keys(this.props.districtData[0]),\n            tableData: this.props.districtData.filter(v => v.state == this.props.selectedState)\n          })\n        }\n      }\n  }\n  handleStateClick =(state) => {\n    if(this.props.districtData.length > 0){\n    this.props.selectState(state);\n  }\n  }\n  render(){\n \n  return (this.state.tableHeader.length > 0 && this.state.tableData.length > 0) ?<Paper style={{\n        width: '100%',\n        overflowX: 'auto',\n      }}>\n      <Table  size=\"small\" padding='checkbox' aria-label=\"a dense table\">\n        {lastupdatedtime && <caption>Last updated : {lastupdatedtime}</caption>}\n        <TableHead > \n          <TableRow>\n            {this.state.tableHeader.map(v => (v!= 'statecode' && v != 'lastupdatedtime' && (this.props.selectedState != \"\"? v!='state':true)) && v && <StyledTableCell  style={{fontWeight:\"600\"}}>{v}</StyledTableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.state.tableData.map((row) => \n            row.statecode != 'TT' && <StyledTableRow key={row.id} onClick = {() => !(this.props.selectedState != \"\" ) && this.handleStateClick(row['state'])} >\n              {Object.keys(row).map(u => {\n                  if('lastupdatedtime' == u ){\n                    lastupdatedtime = row[u];\n                  }\n                  return ('statecode' != u && 'lastupdatedtime' != u && (this.props.selectedState != \"\"? u!='state':true) &&  u) && <TableCell component=\"th\" scope=\"row\" style={'state' == u?{}:{textAlign:'right'}}>\n                {row[u]}\n              </TableCell>\n            })}\n            </StyledTableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Paper>:\n<Skeleton animation=\"wave\"  height='100%'/>\n  }\n}\n\nexport default StateTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LinearGradient = props => {\n  const { data } = props;\n  const boxStyle = {\n    width: '50%',\n    margin: '10px auto'\n  };\n  const gradientStyle = {\n    backgroundImage: `linear-gradient(to right, ${data.fromColor} , ${data.toColor})`,\n    height: 20\n  };\n  return (\n    <div>\n      <div style={{...boxStyle, display:\"flex\"}}>\n        <span>{data.min}</span>\n        <span style={{flex:\"1\"}}></span>\n        <span>{data.max}</span>\n      </div>\n      <div style={{ ...boxStyle, ...gradientStyle ,marginTop:\"16px\"}}></div>\n    </div>\n  );\n};\n\nLinearGradient.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default LinearGradient;","import React from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport Axios from 'axios';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport ReactTooltip from 'react-tooltip';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LinearGradient from './LinearGradient.js';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 1700,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n};\n\nlet COLOR_RANGE = [\n    '#EDFD99',\n    '#99a8fd',\n    '#fdee99',\n    '#99fdf6',\n    '#fd99ce',\n    '#b4fd99',\n  ];\n\n// function getRandomColor() {\n//     var letters = '0123456789ABCDEF';\n//     var color = '#';\n//     for (var i = 0; i < 6; i++) {\n//       color += letters[Math.floor(Math.random() * 16)];\n//     }\n//     return color;\n//   }\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-force-tab-${index}`,\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\n    };\n  }\nconst DEFAULT_COLOR = '#EEE';\n\n// const 10 = () => {\n//   return parseInt(Math.random() * 100);\n// };\n\nconst geographyStyle = {\n  default: {\n    outline: 'none',\n    stroke: '#636363'\n  },\n  hover: {\n    fill: '#ccc',\n    transition: 'all 250ms',\n    outline: 'none'\n  },\n  pressed: {\n    outline: 'none'\n  }\n};\n\n// let gradientData;\n// let colorScale;\nconst StyledTabs = withStyles({\n    root: {\n        flexGrow:1\n    },\n    indicator: {\n\n      backgroundColor: '#636363',\n\n    },\n  })((props) => <Tabs  {...props}  />);\n\n  const StyledTab = withStyles((theme) => ({\n    root: {\n\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightRegular,\n      fontSize: theme.typography.pxToRem(15),\n\n      backgroundColor:'#a2ab58 ',\n      '&$selected': {\n        color:'white',\n        opacity: 1,\n        backgroundColor:'#636363 '\n      },\n      '&:focus': {\n        color:'white',\n        opacity: 1,\n        backgroundColor:'#636363 '\n      },\n      '&:hover': {\n        color:'white',\n        opacity: 1,\n      },\n    },\n    selected: {},\n    \n  }))((props) => <Tab disableRipple {...props} />);\n\n  function ColorLuminance(hex, lum) {\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n      hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n    }\n    lum = lum || 0;\n  \n    // convert to decimal and change luminosity\n    var rgb = \"#\", c, i;\n    for (i = 0; i < 3; i++) {\n      c = parseInt(hex.substr(i*2,2), 16);\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n      rgb += (\"00\"+c).substr(c.length);\n    }\n  \n    return rgb;\n  }\n\nclass MapComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tooltipContent:'',\n            data: [],\n            gradientData:{},\n            colorScale:{},\n            selectedIndex:0\n        }\n    }\ncomponentDidMount(){\n        let totalData;\n        let resp = this.props.stateData.filter(v => \n          {\n            if(v.statecode != 'TT'){       \n                return true;\n            }\n            else {\n              totalData = v;\n              return false;\n            }\n        });\n        let categories = resp[0] && Object.keys(resp[0]).filter(v => !['','state','statecode','lastupdatedtime'].includes(v));\n        let colorArray = [];\n        for(let i=8;i>-4;i--){\n          colorArray.push(ColorLuminance(COLOR_RANGE[0],(i+1)/10))\n        }\n        this.setState({\n          data: resp,\n          totalData:totalData,\n          categories : categories,\n          gradientData : {\n            fromColor: colorArray[0],\n            toColor: colorArray[colorArray.length -1],\n            min: 0,\n            max: resp.reduce((max, item) => (item[categories[this.state.selectedIndex]] > max ? item[categories[this.state.selectedIndex]] : max), 0)\n          },\n          colorScale : scaleQuantile()\n          .domain(resp.map(d => +d[categories[this.state.selectedIndex]]))\n          .range(colorArray)\n        })\n       \n}\n\n\n   onMouseEnter = (geo, current)  =>{\n    return () => {\n      this.setState({\n        tooltipContent:`${geo.properties.st_nm}: ${![\"\",null,undefined].includes(current[this.state.categories[this.state.selectedIndex]]) ? current[this.state.categories[this.state.selectedIndex]]:'NA'}`\n      })\n    };\n  };\n\n   onMouseLeave =  () => {\n    this.setState({\n        tooltipContent:`` \n      })\n  };\nhandleCategoryChange = (event, newValue)=>{\n    \n    let colorArray = [];\n    for(let i=8;i>-4;i--){\n      colorArray.push(ColorLuminance(COLOR_RANGE[newValue%COLOR_RANGE.length],(i+1)/10))\n    }\n    this.setState({\n        selectedIndex : newValue,\n        gradientData : {\n            fromColor: colorArray[0],\n            toColor: colorArray[colorArray.length-1],\n            min: 0,\n            max: this.state.data.reduce((max, item) => (item[this.state.categories[newValue]] > max ? item[this.state.categories[newValue]] : max), 0)\n          },\n          colorScale : scaleQuantile()\n          .domain(this.state.data.map(d => d[this.state.categories[newValue]]))\n          .range(colorArray)\n    })\n}\nrender(){\n  return (\n      \n   ( this.state.data.length > 0 && this.state.categories )? <div className=\"full-width-height container\">\n              <StyledTabs\n          value={this.state.selectedIndex}\n          onChange={this.handleCategoryChange}\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          aria-label=\"full width tabs example\"\n        >\n            {this.state.categories.map((v,i) => <StyledTab {...(this.state.totalData && this.state.totalData[v]?{label:this.state.totalData[v]}:{})} icon={<div>{v}</div>}  {...a11yProps(i)} />)}\n\n        </StyledTabs>\n      {/* <h1 className=\"no-margin center\">States and UTs</h1> */}\n      <ReactTooltip>{this.state.tooltipContent}</ReactTooltip>\n        <ComposableMap\n          projectionConfig={PROJECTION_CONFIG}\n          projection=\"geoMercator\"\n          \n          viewBox={  `50 -250 ${900} ${1000}` }\n          data-tip=\"\"\n        >\n          <Geographies geography={INDIA_TOPO_JSON}>\n            {({ geographies }) => geographies.map(geo => {\n                //console.log(geo.id);\n                const current = this.state.data.find(s => s.state === geo.id);\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={current ? [0,\"\"].includes(current[this.state.categories[this.state.selectedIndex]])?'white':this.state.colorScale(current[this.state.categories[this.state.selectedIndex]]) : DEFAULT_COLOR}\n                    style={geographyStyle}\n                    onMouseEnter={this.onMouseEnter(geo, current)}\n                    onMouseLeave={this.onMouseLeave}\n                  />\n                );\n              })\n            }\n          </Geographies>\n        </ComposableMap>\n       {this.state.gradientData && <LinearGradient data={this.state.gradientData} />}\n    </div>:\n<Skeleton animation=\"wave\"  height='800px'/>\n  )}\n}\n\nexport default MapComponent;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport StateTable from './components/table';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from '@material-ui/core/Paper';\nimport MapComponent from './components/map';\nimport Slide from \"@material-ui/core/Slide\";\nimport './App.css';\nimport 'axios';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport logo from './india-tracker-shadow.png';\nimport Axios from 'axios';\nimport Back from '@material-ui/icons/ArrowBack';\n\n// url to a valid topojson file\nconst geoUrl =\n  \"https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\"\nconst MyAppBar = styled(AppBar)({\n  background: 'linear-gradient(45deg, #636363 30%, #a2ab58 90%)',\n  border: 0,\n  boxShadow: '0 3px 5px 2px rgba(99, 99, 99, .3)',\n  color: 'white',\n  height: 55,\n});\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      stateData : [],\n      districtData: [],\n      selectedState: \"\"\n    }\n}\n\nselectState = (state) => {\n  this.setState({\n    selectedState:state\n  })\n}\n\n  componentDidMount(){\n    Axios.get('https://script.google.com/macros/s/AKfycbxSoELl1el6cJHtsdNcldXYgh4Tn69ofoVyNSfKGj9n2ar5YV4/exec').then(response=>{\n    this.setState({\n      stateData:response.data\n    });\n  })\n  Axios.get('https://script.google.com/macros/s/AKfycbyhiGiT67oOnupBAXW1ZFBkd6ZWVAbXiajVBkA7I2EEEMHrelGc/exec').then(response=>{\n    this.setState({\n      districtData:response.data\n    });\n  })\n  }\n\n  render(){\n\n    return  <React.Fragment>\n<HideOnScroll >\n  <MyAppBar >\n    <Toolbar>\n      <Typography variant=\"h4\">TRIFED</Typography>\n      <img style={{marginLeft: 'auto',maxWidth: '130px',marginTop: '-10px'}} src={logo}/>\n    </Toolbar>\n    \n  </MyAppBar>\n</HideOnScroll>\n<Toolbar />\n\n  <Container>\n  {/* <Box my={2}> */}\n  {/* <Container fixed> */}\n    { this.state.stateData.length > 0 && this.state.districtData.length >0 ? <Grid container spacing={3}>\n    <Grid item xs={12} sm={12} lg={12}> \n      {this.state.selectedState != \"\" && <div  style={{display:\"flex\",alignItems:\"center\", cursor:\"pointer\"}} onClick={() => this.selectState(\"\")}><Back/><h4>Go back to state table</h4></div>}\n      </Grid>\n        <Grid item xs={12} sm={12} lg={6}>\n          <StateTable  stateData={this.state.stateData} districtData={this.state.districtData} selectedState = {this.state.selectedState} selectState={this.selectState}/>\n        </Grid>\n        <Grid item xs={12} sm={12} lg={6}>\n          <MapComponent stateData={this.state.stateData} districtData={this.state.districtData} selectedState = {this.state.selectedState} selectState={this.selectState}/>\n        </Grid>    \n      </Grid>:\n    <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n      <Grid item xs={12} sm={12} lg={12}>\n        <CircularProgress size={50} /></Grid>\n      </Grid>}\n\n\n\n  {/* </Container> */}\n  {/* </Box> */}\n</Container>\n</React.Fragment>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/india-tracker-shadow.e9889154.png\";"],"sourceRoot":""}